# Copyright 2021 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

appName = "pensions-scheme-migration-frontend"

# this key is for local development only!
sso.encryption.key = "P5xsJ9Nt+quxGZzB4DeLfw=="
play.ws.acceptAnyCertificate = true

cookie.deviceId.secret = "some_secret"
# Session configuration
# ~~~~~
play.http.session.httpOnly = true

play.http.session.secure = false

play.http.session.cookieName = "mdtp"

play.http.router = testOnlyDoNotUseInAppConf.Routes

play.filters.enabled += play.filters.csp.CSPFilter
play.filters.csp.directives.script-src = ${play.filters.csp.nonce.pattern} "'self' 'unsafe-inline' 'strict-dynamic' 'sha256-+6WnXIl4mbFTCARd8N3COQmT3bJJmo32N8q8ZSQAIcU=' https: http:"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.frontend.FrontendModule"
play.modules.enabled += "PODSModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.frontend.filters.FrontendFilters"

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Custom error handler
play.http.errorHandler = "handlers.ErrorHandler"

play.filters.headers.contentSecurityPolicy = "default-src 'self' 'unsafe-inline' localhost:9000 localhost:9032 www.google-analytics.com data:"

# Play Modules
# ~~~~
# Additional play modules can be added here

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
# Not set here so that MDTP frontends share the same secret key in the local environment
# (see common.conf in frontend-bootstrap).
# In server environments the secret comes from app-app.config-common
# play.http.secret.key="qGwmH9pTEApndcoZDblC6cZypE42XpAVjNEFs4lSaNpmSiDLLJrGFEs5R8Km9A62"

location.canonical.list = "location-autocomplete-canonical-list.json"

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

//session.timeoutSeconds = 999999
session {
  _timeoutSeconds = 900
  _CountdownInSeconds = 120
}

microservice {
  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.${appName}.
      enabled = true
    }
  }

  services {
    auth {
        host = localhost
        port = 8500
    }

    contact-frontend {
      protocol = http
      host = localhost
      port = 9250
       beta-feedback-url {
              authenticated = ${microservice.services.contact-frontend.protocol}"://"${microservice.services.contact-frontend.host}":"${microservice.services.contact-frontend.port}"/contact/beta-feedback"
              unauthenticated = ${microservice.services.contact-frontend.protocol}"://"${microservice.services.contact-frontend.host}":"${microservice.services.contact-frontend.port}"/contact/beta-feedback-unauthenticated"
            }
            report-problem-url {
              with-js = ${microservice.services.contact-frontend.protocol}"://"${microservice.services.contact-frontend.host}":"${microservice.services.contact-frontend.port}"/contact/problem_reports_ajax?service=PODS"
              non-js = ${microservice.services.contact-frontend.protocol}"://"${microservice.services.contact-frontend.host}":"${microservice.services.contact-frontend.port}"/contact/problem_reports_nonjs?service=PODS"
            }
    }

    pensions-scheme-migration {
      host = localhost
      port = 8214
    }
  }
}

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

controllers {
  controllers.Assets = {
    needsAuditing = false
  }
}

assets {
  version = "3.11.0"
  version = ${?ASSETS_FRONTEND_VERSION}
  url = "http://localhost:9032/assets/"
}
google-analytics {
  token = N/A
  host = auto
}

urls {
  login = "http://localhost:9949/auth-login-stub/gg-sign-in"
  logout = "http://localhost:9514/feedback/PODS"

  lock = "/pensions-scheme-migration/lock"
  lockByUser = "/pensions-scheme-migration/lock-by-user"
  lockOnScheme = "/pensions-scheme-migration/lock-on-scheme"
  dataCache = "/pensions-scheme-migration/migration-data"
}

play.i18n.langs = ["en", "cy"]

# Change this value to true to enable Welsh translations to be loaded from messages.cy, and to display the language toggle
features.welsh-language-support = false


